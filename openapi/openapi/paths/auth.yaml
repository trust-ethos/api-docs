privy_login_create:
  post:
    summary: Create a Privy login
    description: |
      Creates or updates a Privy login record in the database. This endpoint is used
      to synchronize Privy authentication state with the Ethos backend.

      The endpoint verifies the Privy ID token and creates/updates a database record
      with the user's Privy ID, connected wallets, and Twitter user ID if available.

      A valid Privy session is required (via the Authorization header containing a Privy token).
    operationId: createPrivyLogin
    tags:
      - Authentication
    security:
      - privyAuth: []
    parameters:
      - in: header
        name: X-Privy-Id-Token
        required: true
        schema:
          type: string
        description: The Privy ID token for the authenticated user
    responses:
      '200':
        description: Successfully created/updated Privy login
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/PrivyLoginResponse'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/ErrorResponse'
            examples:
              invalidParams:
                value:
                  ok: false
                  error:
                    code: BAD_PARAMETERS
                    message: Invalid parameters
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/ErrorResponse'
            examples:
              missingToken:
                value:
                  ok: false
                  error:
                    code: UNAUTHORIZED
                    message: Missing privy token
              invalidToken:
                value:
                  ok: false
                  error:
                    code: UNAUTHORIZED
                    message: Invalid privy token
              invalidIdToken:
                value:
                  ok: false
                  error:
                    code: UNAUTHORIZED
                    message: Invalid privy ID token
      '403':
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/ErrorResponse'
            examples:
              invalidUser:
                value:
                  ok: false
                  error:
                    code: FORBIDDEN
                    message: Invalid user
              invalidLinkedAccounts:
                value:
                  ok: false
                  error:
                    code: FORBIDDEN
                    message: Invalid linked accounts

privy_login_save_oauth2_tokens:
  post:
    summary: Save OAuth2 tokens for a Privy login
    description: |
      Saves OAuth2 tokens for the current authenticated Privy user.
      This is used to store tokens for external providers (e.g., Twitter)
      that can be used for API calls on behalf of the user.

      A valid Privy session is required (via the Authorization header containing a Privy token).
    operationId: savePrivyOAuth2Tokens
    tags:
      - Authentication
    security:
      - privyAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/auth.yaml#/PrivyOAuth2TokensRequest'
    responses:
      '200':
        description: Successfully saved OAuth2 tokens
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/PrivyLoginResponse'
      '400':
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/ErrorResponse'
            examples:
              invalidParams:
                value:
                  ok: false
                  error:
                    code: BAD_PARAMETERS
                    message: Invalid parameters
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../schemas/auth.yaml#/ErrorResponse'
            examples:
              missingToken:
                value:
                  ok: false
                  error:
                    code: UNAUTHORIZED
                    message: Missing privy token
              invalidToken:
                value:
                  ok: false
                  error:
                    code: UNAUTHORIZED
                    message: Invalid privy token
